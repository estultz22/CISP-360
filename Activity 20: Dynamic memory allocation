#include <iostream>
#include <iomanip>

using std::cin;
using std::cout;
using std::endl;

//functions
float *expandArray(float *, int &);
void printList(float *, int );
void insertAtZero(float *, float, int);
float getFloat();

int main()
{
    int arrSize = 2,
        numCount = 0,
        numCont;

    float *arr = new float[arrSize],
           newItem;

    do
    {
        if (arrSize == numCount)
        arr = expandArray(arr, arrSize);

        printList(arr, arrSize);

        newItem = getFloat();
        insertAtZero(arr, newItem, numCount);
        numCount++;

        printList(arr, arrSize);

        cout << "Keep going? press 1 to stop: ";
        cin >> numCont;
    }while (numCont != 1);


    delete [] arr;
    return 0;
}

//creates a new array with doubled size and returns pointer to that array
float *expandArray(float *p, int &size)
{
    int i;
    float *newArray = new float[size * 2];

    for (i = 0; i < size; i++)
        *(newArray + i) = *(p + i);

    for(int index = size; index < size * 2; index++)
    {
        *(newArray + index) = 0.0f;
    }

    delete[] p;
    size *= 2;

    return newArray;
}

//prints list
void printList(float *list, int listSize)
{
    cout << "The list contains: \n";
    for (int index = 0; index < listSize; index++)
    {
        cout << std::fixed << std::setprecision(1)<< *(list + index) << " ";
    }
    cout << endl;
}

//insert new input float at zero
void insertAtZero(float *p, float item, int count)
{
    float *newItem = new float(item);
    int i;

    // shift elements forward
    for (i = count; i >= 1; i--)
        *(p + i) = *(p + i - 1);

    *p = *newItem;

    delete newItem;
}

//gets a single float
float getFloat()
{
    float item;

    cout << "Enter float: ";
    cin >> item;

    return item;
}
